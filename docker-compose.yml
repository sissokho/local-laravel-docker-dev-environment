version: '3'
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        uid: 1000
        user: moustapha
    image: example-app
    container_name: example-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - "./:/var/www/html"
    networks:
      - local-network
    depends_on:
      - db

  web_server:
    image: nginx:stable-alpine
    container_name: example-app-web-server
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - "./:/var/www/html"
      - "./docker-compose/nginx:/etc/nginx/conf.d"
    networks:
      - local-network
    depends_on:
      - app

  db:
    image: mysql/mysql-server:8.0
    container_name: example-app-db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    volumes:
      - "mysql:/var/lib/mysql"
    networks:
      - local-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

networks:
  local-network:
    driver: bridge
volumes:
  db-data:
    driver: local
